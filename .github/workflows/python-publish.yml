name: Semantic Release

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel build pytest pytest-cov coverage codecov codeclimate-test-reporter

    - name: Build package before tests
      run: | 
        python -m build
        pip install dist/*.whl

    - name: Run tests with coverage
      run: | 
        coverage run -m pytest tests
        coverage xml

    - name: Coverage report
      run: coverage report

    - name: Upload coverage to Coveralls
      uses: coverallsapp/github-action@v2.2.3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel: true
        flag-name: coverage_py${{ matrix.python-version }}

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: coverage_py${{ matrix.python-version }}

    - name: Upload coverage to Code Climate
      uses: paambaati/codeclimate-action@v8.0.0
      # use only for the latest Python version, as Code Climate does not support multiple flags
      if: matrix.python-version == '3.12'
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      with:
        debug: true
        coverage_locations: coverage.xml

  coverall_report:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Combine Coveralls reports
      uses: coverallsapp/github-action@v2.2.3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true

  release:
    runs-on: ubuntu-latest
    concurrency: release
    needs: test
    if: github.ref == 'refs/heads/master'
    permissions:
      id-token: write
      contents: write

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Python Semantic Release
      id: release
      uses: python-semantic-release/python-semantic-release@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v2
      if: steps.release.outputs.released == 'true'
      with:
        python-version: '3.8'

    - name: Install dependencies
      if: steps.release.outputs.released == 'true'
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel build # Add other dependencies if needed

    - name: Rebuild package after version bump
      if: steps.release.outputs.released == 'true'
      run: python -m build

    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      if: steps.release.outputs.released == 'true'
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}

    - name: Publish package to GitHub Release
      uses: python-semantic-release/upload-to-gh-release@main
      if: steps.release.outputs.released == 'true'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ steps.release.outputs.tag }}

